--> What is java Explain?
   Java is a simple programming language
   Itis write code and compilationand debugging very easy.
   and it helps create reusable code
   java has a more features.
   
 Platform indipendent
 opensource
 Multithredding
 more secure
 portable
======================================================================================================================================================================
--> OOps:(Objected  Oriented programming Structure)
   It is used to program methodology and program statergy it is required to full fill project requirement
   it is 4 pillars are there
-->Class:
   Syntax: (first type classs name and click ctrl+space)
           public class Bank {
                }
            //Bank is class name       
            //Public: is a access specifier
			
   Methos: Set of actions to be performed
      Syntax: public void dummy{
                }//dummy is method name
             main
                 public static void main(String[] args) {
                }
			public : public is access modefier it is used to call any method or class by Jvm from anywhere.
			static : without creating object we are access the static method.
			Void : void is return type we not return the method that the time we can use the void.
			main: main is the name of method.
		(String[] args): It is used to command line argument.
		
  Object: Run the memory allocation: 
          using object we call the any method 
	Syntax: (Class name)(object name) = new (class name)
	
Inherdance: it is used to one class to the methods and variables are the another classs rewriting is called inheridance.
abstraction: it is used to hidig of unnessasry data
encapsulation: it is used to secure the data.
polymorphism: one thing multiple behaviour.
===============================================================================================================================================================	
  inheritance types:
 1. single level:  one parent class is directly support into one chaild class using extended keyword.
 2. multi level :  one chaild class and morethen one parent class.
 3. hierarchal  :  one parent class and more then one chaild class.
 4. multiple    :  one class inheritance two parent classes at the same time.
 5. hybrid      :  it is combination of single and multiple inheridance.
----------------------------------------------------------------------------------------------------------------------------------
         Method overloading                                                                         method overriding
  1. method over loading develop multiple methods same name           1.method over riding  multiple methods same name  
     different methods is called method overloading.                    different arguments is called method overriding.

  2.over loading is subselected to single class                       2.over riding is inheritance compulsary.

  3.over loading is change the method signature.                      3.over riding is method signature must be same.

  4.we can change the method hadder over loading.                     4.we can't change the method hadder while overriding.
  
  5.over loading will be achive compile time.                         5.over riding will be achived run time.

  6.over loading is an example of compile time polymorphism.          6.over riding will be example of run time polymorphism 

  7.example for overloading is payment travelling                     7.example for over riding is change the callertune.
-----------------------------------------------------------------------------------------------------------------------------------
Casting:
 it is used due to the one primitive data type into another data type is called casting.
1. widening
2. narrowing
   
1. widening:
   
   it is used due to the process small primitive data type into another data type is called widening.

2. narrowing.
  
   it is used due to the Assigning bigger primitive data type into smaller is called narrowing.
---------------------------------------------------------------------------------------------------------------------------------
 encapsulation:
 the process of wrapping methods and variables into single unit is called encapsulation.
EX: class
    {
      data member
    }
 ----------------------------------------------------------------------------------------------------------------
polymorphism:
  
 one thing multiple behaviour is called polymorphism.
there are two types of polymorphism
1.compile time polymorphism: it is used to during compile time multiple behaviour is called compile time polymorphism.
2.run time poly morphism: it is used run/excute one thing multiple behaviour is called run time polymorphism.
------------------------------------------------------------------------------------------------------------------
40. Data types:
 
Data types is the some useful information.
data types are two types 
1.primitive data type: it is used to the fixd the memory size
2.non-primitive data type: it is used due to the does't fixed memory size.
-------------------------------------------------------------------------------------------------------------------
41. Variables

 variables is used due to the store the data
 it is used to 2 tyoes
1.variable declaration: it is used due to the reserving one block in our own memory.
2.variable intialization: it is used due to the store the value in reserving block.
--------------------------------------------------------------------------------------------------------------------
42. Operator over loading:
 
  out of all arthematic operation and less operation is called operation over loading.
---------------------------------------------------------------------------------------------------------------
43.Identifier:

 identifier means name of the program for identification.
Ex: program name,class namr,variable,method...
-----------------------------------------------------------------------------------------------------------------
44.Key word:
  
  these are reserve word or predefine word.
  Access key word : public,private,static....
  conditional keyword: else if switch break....
  iterative: for,while
  class level: class,package,import,
  Exception : try,catch.
  data types :int short,long
  othere: voliate,transuant
-----------------------------------------------------------------------------------------------------
45.Prime number:
 
 a number is called prime number it is devided into 1 it self
   code:
   public class div
   {
   public static void main(string args[])
   {
     int num=11,count=0;
     if(i=1;i<11;i++)
    {
        if(num%i==0)
     {
        count++;
       }
if (count==2)
sop(num+" is pn);
else
sop(num+" is not pn);
}
}
---------------------------------------------------------------------------------------------------------------
46.Reverse of a number:
  
public class reverse
{
public static void main(string args[])
{
int num123,rev=0.rem;
while(num>0)
{
rem=rev%10;
num=num/10;
rev=rev*10+rem;
}
sop(rev);
}
}
------------------------------------------------------------------------------------------------
47. fibnoci series:
 
 it is a series of two numbers 0&1 other thirs bnumber is even number
code:
public class div
{
public static void main(string args[])
{ 
int f1=0,f2=1,f3;
sop(f1+" "+f3);
for(i=1;i<12;i++)
}
f3=f1+f2;
sop(" "+f3);
f1=f2;
f2=f3;
}
}
--------------------------------------------------------------------------------------------------------
48. swappin of two numbers
  code:
public class swapping
{
public static void main(string args[])
{
int a=10,b=20,c=?;
sop("before swapping_"+a" "+b");
c=a;
a=b;
b=c;
sop("after swapping_"+A" "+B):
}
}
---------------------------------------------------------------------------------------------------------
49.Armstrong number:
   a number is called armstrong number it is individually qube and factorial of num same result same number is called armstrong number.
public class arm
{
public static void main(string args[])
{
int num=123;arm=0;temp=num;
while(num>0)
{
rem=rem%10;
num=num/10;
arm(rem*rem*rem*arm)
}
if(num==arm)
sop(temp+" is the armstrong number");
else
sop(temp+" is the not armstrong number");
}
}
-------------------------------------------------------------------------------------------------------------
50. Factrial:
code:
public class Fac
{ 
public static void main (string args[])
{ 
int num=5,fact=1;
for(i=5;i>=1;i++)
{
fact=fact*i;
}
sop(fact);
}
--------------------------------------------------------------------------------------------------------------
51. Java platform independent language or not
 yes java is independant language develop under one o.s to another o.s.
-------------------------------------------------------------------------------------------------------------
52.Jvm is the particular platform independent
  java is particular the file particular o.s.
-------------------------------------------------------------------------------------------------------------
53.Components of JDK
   jDk means java developement kit
   jdk is the develop and requirement and excute application.
JRE: JAVAruntime environment
  it is used to require support to the excute develop
JVM: java virtual machine
  it is used responce every java program.
----------------------------------------------------------------------------------------------------------------
54.Explain do while loop
   int 
    do
    {
       //body of the loop
    }
    while(condition);
-----------------------------------------------------------------------------------------------------------------
55.different between pre and post increment
  pre                                                               post
1.inc                                                             1.assign
2.assign                                                          2.inc
3.update                                                          3.update
-----------------------------------------------------------------------------------------------------------------
56.breake key word
 to stop the operation and jvm will out of the body
------------------------------------------------------------------------------------------------------------------
57.for loop
  for(int i=1;i<1;i++)
{
sop(i);
}
------------------------------------------------------------------------------------------------------------------
58.features of java
   object oriented,roubist,secure,simple,platform independent,familier.
------------------------------------------------------------------------------------------------------------------
59.difference between c and java
            C                                                                     JAVA
1. it procedural programing language                                   1.it is object oriented language
2. c is more procedural oriented                                       2.java is data oriented.
3. c is generally break down the functions                             3.java is break down the object.
4. c platform dependent                                                4.java is independent
5. c supports pointers                                                 5.java does not suppoerts pointers.
---------------------------------------------------------------------------------------------------------------------
 module :2

   method without argument:
  method with arguments is the due to the will never write a logic in side class and write a logic inside main method
  Ex: access specifier static/non-static return type
       {
          body of method
       }

method with arguments:
method without arguments is the due to the area of the rectangle area of square method are multiple times same output is the
method with arguments
Ex: public static void add();

method with return type:
whenever we want to our method return type of the particular valuewith return type.
Ex: public static int()
{
body of the operation
}

method overloading:
it is developing multiple method same different methods is called method over loading.
------------------------------------------------------------------------------------------------------------------------
51.Variables
   Variables are two types 
   local variables
   global variable
   
 local variable:
 variables are declared inside main method(main() and userdefine)with in the scope of class it is called local variables.
 it access of the inside method not outside method

 global variable:
 global variables are due to the declared outside main method(main() and user define ) with in the class such a variables is called 
 global variables.

 1.static variables
 2.non-static variables
 
 1.static variables:
   Variables which are declared out side in the method with in the class such a variables is called static variable.
  Ex: class ex
        {
        static datatype var=value;
         main();
}

2.Non-static variable:
  variables which are declared outside the method with in the class does't contains such a variables is called non-static variable.
   Ex: class ex
         {
           static datatype var=value;
         }
}
-----------------------------------------------------------------------------------------------------------------------------
52.what is array
A. it is used to collection of data.
---------------------------------------------------------------------------------------------------------------------------
53.          static                                                                     non-static
   1.static means single copy                                                     1.non-static means doble copy
   2.static members is present static pool                                        2.non-static members present in object.
   3.static members can't be inherited                                            3.non-static members are can be inherited.
   4.static method can't be over ridden                                           4.non-static members can be overroden.
--------------------------------------------------------------------------------------------------------------------------
54.      Constuctor:
   constructor is a special type of method which excuted whenever we created an object.
 Ex: Access modifier constructor name
{
body of the method
}
----------------------------------------------------------------------------------------------------------------------
55. 1.constructor does't have any arguments is called no-argument constructor.
    2.constructor does the any arguments is called paremenant constructor.
----------------------------------------------------------------------------------------------------------------------
56.constructor chaining:
   the process of one constructor from another constructor is called constructor chaining.
------------------------------------------------------------------------------------------------------------------------
57.constructor over loading 
 the process of developing  multiple constructor and same constructor name different methods is called 
  constructor over loading.
-------------------------------------------------------------------------------------------------------------------------
58.object class
  object class is the parent class it is predefined class or user defined class.
EX: class A
    {
      public static void main(string args[])
     {
      }
}
--------------------------------------------------------------------------------------------------------------------------
59.String class
   it is a method of object class .it provides complete information.
Ex; public string to string()
{
return package name,class name
}
--------------------------------------------------------------------------------------------------------------------
60. collection and frameworks:
   
   The collection in java  is frame work that provedes store the manupulation of an objects.
 
 frame work:

the it providess readymade architecture
it represents a set of classes and interfaces.

it is collection frame works are the represents unified architecture store the manupulation of group of objects.
classes(arraylist,vector,linked list), interfaces(set,list,deque).
-----------------------------------------------------------------------------------------------------------------------
61. Exception handling
    exception handling is the powerful machanism of the handle run time error and norma;l flow of the exception handling
    Exception handling is abnormal condition.
-------------------------------------------------------------------------------------------------------------------------
62. print max element in arr
   class max
{
   public static void main(string args[])
   int arr[]={10,324,45,90,9808};
   int max=arrays,stream(arr).max().getas;
   sop("largest given array is"+max);
}
--------------------------------------------------------------------------------------------------------------------
63.pattern printing:
  for(i=1;i<row;i++)
{
for(j=1;j<1;j++)
{
sop("+");
}
sop();
}
------------------------------------------------------------------------------------------------------------------
64.bubble sort
    bubble sort(arr,size)
    for i=0 to n-i-1
    for j=0 to n-i-2
    if arr[j]>arr[j+1]
    swap arr[j] and arr[j+1]
------------------------------------------------------------------------------------------------------------------
65.queue
   data structure designed to queue.
-------------------------------------------------------------------------------------------------------------------
66.linked list
   linked list is the part of collection frame work present in java.util package.
    this class implementation of the linked list data structured.
--------------------------------------------------------------------------------------------------------------------
67. why do you Wipro?
  
   this is one of the fast growing, a well-reputed company in the market, 
   employe oriented also your provides oppoertunity in future and  well defined adaptable atmosphere.
 ---------------------------------------------------------------------------------------------------------------------------------------------------------------
68. prime number
   
 public class 
{
public static void main(string args[])
{
int num=15;
int count=0;
for(int i=1;i<=num;i++)
{
if(num%1=0)
{
count ++;
}
}
if(count==2)
sop(num+"is prime number");
else
sop(num+"is not prime number");
}
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------
69.Different between interface and abstract class
          
               abstract class                                                                                    interface
1. abstract class is does't support multiple inheritance                                              1.interface support multiple inheritance
2. abstarct class is final and non-final,static and non-static                                        2.interface is the static and final variables.
3. abstract class is abstract keyword is used declare abstract class.                                 3.the interface keyword is used declare interface.
4.as abstract class can be extended using keyword extends                                             4.an interface can be implemented using keyword"implemets".
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

          		  